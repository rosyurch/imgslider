const imagesArr=Array.from(document.querySelectorAll(".slider .container .pics > img")),prevBtn=document.querySelector(".slider .container .btn-prev"),nextBtn=document.querySelector(".slider .container .btn-next"),dot0=document.querySelector("#dot-0"),dot1=document.querySelector("#dot-1"),dot2=document.querySelector("#dot-2"),dots=Array.from(document.querySelectorAll(".dot-cont .dot")),setting=document.querySelector(".slider .toggle p");let classesToAdd=["current"];function settingToggle(e){"Fade in"===e.target.innerText?(e.target.innerText="Slide in",classesToAdd.push("move","slide-in")):(e.target.innerText="Fade in",classesToAdd.pop(),classesToAdd.pop()),console.log(classesToAdd)}function dotHandler(e){dots.filter(e=>e.classList.contains("current-dot"))[0].classList.remove("current-dot"),e.target.classList.add("current-dot"),getCurrentIndexRemoveClass(imagesArr),imagesArr[parseInt(e.target.id[4],10)].classList.add("current")}function getCurrentIndexRemoveClass(e){const t=e.filter(e=>e.classList.contains("current"));return index=e.indexOf(t[0]),t[0].classList.remove("current","slide-in"),index}nextBtn.addEventListener("click",e=>{let t=getCurrentIndexRemoveClass(imagesArr);t=(t+1)%imagesArr.length,imagesArr[t].classList.add(...classesToAdd),dots.filter(e=>e.classList.contains("current-dot"))[0].classList.remove("current-dot"),dots[t].classList.add("current-dot")}),prevBtn.addEventListener("click",e=>{let t=getCurrentIndexRemoveClass(imagesArr);t=t?t-1:imagesArr.length-1,imagesArr[t].classList.add(...classesToAdd),dots.filter(e=>e.classList.contains("current-dot"))[0].classList.remove("current-dot"),dots[t].classList.add("current-dot")}),dot0.addEventListener("click",dotHandler),dot1.addEventListener("click",dotHandler),dot2.addEventListener("click",dotHandler),setting.addEventListener("click",settingToggle);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImpzL3NjcmlwdC5qcyJdLCJuYW1lcyI6WyJpbWFnZXNBcnIiLCJBcnJheSIsImZyb20iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJwcmV2QnRuIiwicXVlcnlTZWxlY3RvciIsIm5leHRCdG4iLCJkb3QwIiwiZG90MSIsImRvdDIiLCJkb3RzIiwic2V0dGluZyIsImNsYXNzZXNUb0FkZCIsInNldHRpbmdUb2dnbGUiLCJldmVudCIsInRhcmdldCIsImlubmVyVGV4dCIsInB1c2giLCJwb3AiLCJjb25zb2xlIiwibG9nIiwiZG90SGFuZGxlciIsImZpbHRlciIsImRvdCIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwicmVtb3ZlIiwiYWRkIiwiZ2V0Q3VycmVudEluZGV4UmVtb3ZlQ2xhc3MiLCJwYXJzZUludCIsImlkIiwiYXJyIiwiY3VyciIsImltYWdlIiwiaW5kZXgiLCJpbmRleE9mIiwiYWRkRXZlbnRMaXN0ZW5lciIsImN1ckluZGV4IiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFBQSxVQUFBQyxNQUFBQyxLQUFBQyxTQUFBQyxpQkFBQSxtQ0FDQUMsUUFBQUYsU0FBQUcsY0FBQSxnQ0FDQUMsUUFBQUosU0FBQUcsY0FBQSxnQ0FDQUUsS0FBQUwsU0FBQUcsY0FBQSxVQUNBRyxLQUFBTixTQUFBRyxjQUFBLFVBQ0FJLEtBQUFQLFNBQUFHLGNBQUEsVUFDQUssS0FBQVYsTUFBQUMsS0FBQUMsU0FBQUMsaUJBQUEsbUJBQ0FRLFFBQUFULFNBQUFHLGNBQUEscUJBRUEsSUFBQU8sYUFBQSxDQUFBLFdBNEJBLFNBQUFDLGNBQUFDLEdBQ0EsWUFBQUEsRUFBQUMsT0FBQUMsV0FDQUYsRUFBQUMsT0FBQUMsVUFBQSxXQUNBSixhQUFBSyxLQUFBLE9BQUEsY0FFQUgsRUFBQUMsT0FBQUMsVUFBQSxVQUNBSixhQUFBTSxNQUNBTixhQUFBTSxPQUVBQyxRQUFBQyxJQUFBUixjQUdBLFNBQUFTLFdBQUFQLEdBQ0FKLEtBQUFZLE9BQUFDLEdBQUFBLEVBQUFDLFVBQUFDLFNBQUEsZ0JBQ0EsR0FBQUQsVUFBQUUsT0FBQSxlQUNBWixFQUFBQyxPQUFBUyxVQUFBRyxJQUFBLGVBQ0FDLDJCQUFBN0IsV0FDQUEsVUFBQThCLFNBQUFmLEVBQUFDLE9BQUFlLEdBQUEsR0FBQSxLQUFBTixVQUFBRyxJQUFBLFdBR0EsU0FBQUMsMkJBQUFHLEdBQ0EsTUFBQUMsRUFBQUQsRUFBQVQsT0FBQVcsR0FBQUEsRUFBQVQsVUFBQUMsU0FBQSxZQUdBLE9BRkFTLE1BQUFILEVBQUFJLFFBQUFILEVBQUEsSUFDQUEsRUFBQSxHQUFBUixVQUFBRSxPQUFBLFVBQUEsWUFDQVEsTUFsREE1QixRQUFBOEIsaUJBQUEsUUFBQXRCLElBQ0EsSUFBQXVCLEVBQUFULDJCQUFBN0IsV0FDQXNDLEdBQUFBLEVBQUEsR0FBQXRDLFVBQUF1QyxPQUNBdkMsVUFBQXNDLEdBQUFiLFVBQUFHLE9BQUFmLGNBRUFGLEtBQUFZLE9BQUFDLEdBQUFBLEVBQUFDLFVBQUFDLFNBQUEsZ0JBQ0EsR0FBQUQsVUFBQUUsT0FBQSxlQUNBaEIsS0FBQTJCLEdBQUFiLFVBQUFHLElBQUEsaUJBR0F2QixRQUFBZ0MsaUJBQUEsUUFBQXRCLElBQ0EsSUFBQXVCLEVBQUFULDJCQUFBN0IsV0FDQXNDLEVBQUFBLEVBQUFBLEVBQUEsRUFBQXRDLFVBQUF1QyxPQUFBLEVBQ0F2QyxVQUFBc0MsR0FBQWIsVUFBQUcsT0FBQWYsY0FFQUYsS0FBQVksT0FBQUMsR0FBQUEsRUFBQUMsVUFBQUMsU0FBQSxnQkFDQSxHQUFBRCxVQUFBRSxPQUFBLGVBQ0FoQixLQUFBMkIsR0FBQWIsVUFBQUcsSUFBQSxpQkFHQXBCLEtBQUE2QixpQkFBQSxRQUFBZixZQUNBYixLQUFBNEIsaUJBQUEsUUFBQWYsWUFDQVosS0FBQTJCLGlCQUFBLFFBQUFmLFlBRUFWLFFBQUF5QixpQkFBQSxRQUFBdkIiLCJmaWxlIjoic2NyaXB0cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBpbWFnZXNBcnIgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zbGlkZXIgLmNvbnRhaW5lciAucGljcyA+IGltZycpKTtcbmNvbnN0IHByZXZCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc2xpZGVyIC5jb250YWluZXIgLmJ0bi1wcmV2Jyk7XG5jb25zdCBuZXh0QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNsaWRlciAuY29udGFpbmVyIC5idG4tbmV4dCcpO1xuY29uc3QgZG90MCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkb3QtMCcpO1xuY29uc3QgZG90MSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkb3QtMScpO1xuY29uc3QgZG90MiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNkb3QtMicpO1xuY29uc3QgZG90cyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRvdC1jb250IC5kb3QnKSk7XG5jb25zdCBzZXR0aW5nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNsaWRlciAudG9nZ2xlIHAnKTtcblxubGV0IGNsYXNzZXNUb0FkZCA9IFsnY3VycmVudCddO1xuXG5uZXh0QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZXZlbnQgPT4ge1xuICAgIGxldCBjdXJJbmRleCA9IGdldEN1cnJlbnRJbmRleFJlbW92ZUNsYXNzKGltYWdlc0Fycik7XG4gICAgY3VySW5kZXggPSAoY3VySW5kZXggKyAxKSAlIGltYWdlc0Fyci5sZW5ndGg7XG4gICAgaW1hZ2VzQXJyW2N1ckluZGV4XS5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXNUb0FkZCk7XG5cbiAgICBjb25zdCBjdXJyID0gZG90cy5maWx0ZXIoZG90ID0+IGRvdC5jbGFzc0xpc3QuY29udGFpbnMoJ2N1cnJlbnQtZG90JykpO1xuICAgIGN1cnJbMF0uY2xhc3NMaXN0LnJlbW92ZSgnY3VycmVudC1kb3QnKTtcbiAgICBkb3RzW2N1ckluZGV4XS5jbGFzc0xpc3QuYWRkKCdjdXJyZW50LWRvdCcpO1xufSk7XG5cbnByZXZCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBldmVudCA9PiB7XG4gICAgbGV0IGN1ckluZGV4ID0gZ2V0Q3VycmVudEluZGV4UmVtb3ZlQ2xhc3MoaW1hZ2VzQXJyKTtcbiAgICBjdXJJbmRleCA9IGN1ckluZGV4ID8gY3VySW5kZXggLSAxIDogaW1hZ2VzQXJyLmxlbmd0aCAtIDE7XG4gICAgaW1hZ2VzQXJyW2N1ckluZGV4XS5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXNUb0FkZCk7XG5cbiAgICBjb25zdCBjdXJyID0gZG90cy5maWx0ZXIoZG90ID0+IGRvdC5jbGFzc0xpc3QuY29udGFpbnMoJ2N1cnJlbnQtZG90JykpO1xuICAgIGN1cnJbMF0uY2xhc3NMaXN0LnJlbW92ZSgnY3VycmVudC1kb3QnKTtcbiAgICBkb3RzW2N1ckluZGV4XS5jbGFzc0xpc3QuYWRkKCdjdXJyZW50LWRvdCcpO1xufSk7XG5cbmRvdDAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBkb3RIYW5kbGVyKTtcbmRvdDEuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBkb3RIYW5kbGVyKTtcbmRvdDIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBkb3RIYW5kbGVyKTtcblxuc2V0dGluZy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNldHRpbmdUb2dnbGUpO1xuXG5mdW5jdGlvbiBzZXR0aW5nVG9nZ2xlKGV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LnRhcmdldC5pbm5lclRleHQgPT09ICdGYWRlIGluJykge1xuICAgICAgICBldmVudC50YXJnZXQuaW5uZXJUZXh0ID0gJ1NsaWRlIGluJztcbiAgICAgICAgY2xhc3Nlc1RvQWRkLnB1c2goJ21vdmUnLCAnc2xpZGUtaW4nKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBldmVudC50YXJnZXQuaW5uZXJUZXh0ID0gJ0ZhZGUgaW4nO1xuICAgICAgICBjbGFzc2VzVG9BZGQucG9wKCk7XG4gICAgICAgIGNsYXNzZXNUb0FkZC5wb3AoKTtcbiAgICB9XG4gICAgY29uc29sZS5sb2coY2xhc3Nlc1RvQWRkKTtcbn1cblxuZnVuY3Rpb24gZG90SGFuZGxlcihldmVudCkge1xuICAgIGNvbnN0IGN1cnIgPSBkb3RzLmZpbHRlcihkb3QgPT4gZG90LmNsYXNzTGlzdC5jb250YWlucygnY3VycmVudC1kb3QnKSk7XG4gICAgY3VyclswXS5jbGFzc0xpc3QucmVtb3ZlKCdjdXJyZW50LWRvdCcpO1xuICAgIGV2ZW50LnRhcmdldC5jbGFzc0xpc3QuYWRkKCdjdXJyZW50LWRvdCcpO1xuICAgIGdldEN1cnJlbnRJbmRleFJlbW92ZUNsYXNzKGltYWdlc0Fycik7XG4gICAgaW1hZ2VzQXJyW3BhcnNlSW50KGV2ZW50LnRhcmdldC5pZFs0XSwgMTApXS5jbGFzc0xpc3QuYWRkKCdjdXJyZW50Jyk7XG59XG5cbmZ1bmN0aW9uIGdldEN1cnJlbnRJbmRleFJlbW92ZUNsYXNzKGFycikge1xuICAgIGNvbnN0IGN1cnIgPSBhcnIuZmlsdGVyKGltYWdlID0+IGltYWdlLmNsYXNzTGlzdC5jb250YWlucygnY3VycmVudCcpKTtcbiAgICBpbmRleCA9IGFyci5pbmRleE9mKGN1cnJbMF0pOyAvLyBmaWx0ZXIgcmV0dXJucyAxLWVsZW1lbnQgYXJyYXlcbiAgICBjdXJyWzBdLmNsYXNzTGlzdC5yZW1vdmUoJ2N1cnJlbnQnLCAnc2xpZGUtaW4nKTtcbiAgICByZXR1cm4gaW5kZXg7XG59XG4iXX0=
